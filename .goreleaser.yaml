# .goreleaser.yml

# Make sure to check the documentation at https://goreleaser.com
project_name: movie-service
before:
  hooks:
    - go run github.com/99designs/gqlgen generate
#    - go run github.com/vektra/mockery/v2@v2.33.2
    - go mod tidy
    - go generate ./...
    -
builds:
  - id: main
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.CommitDate}} -X main.builtBy=goreleaser'
    mod_timestamp: "{{ .CommitTimestamp }}"

kos:
  - id: ko-build
    build: main
    main: ./server.go
    # Platforms to build and publish.
    #
    # Default: 'linux/amd64'
    platforms:
      - linux/amd64
      - linux/arm64

    # Tag to build and push.
    # Empty tags are ignored.
    #
    # Default: 'latest'
    # Templates: allowed
    tags:
      - latest
      - '{{.Tag}}'
      - '{{if not .Prerelease}}stable{{end}}'

    # Creation time given to the image
    # in seconds since the Unix epoch as a string.
    #
    # Since: v1.17
    # Templates: allowed
    creation_time: '{{.CommitTimestamp}}'

    # Creation time given to the files in the kodata directory
    # in seconds since the Unix epoch as a string.
    #
    # Since: v1.17
    # Templates: allowed
    ko_data_creation_time: '{{.CommitTimestamp}}'

    repository: ghcr.io/seanb4t/example-movie-service

    sbom: spdx
    bare: true



gomod:
  proxy: true

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
universal_binaries:
  - replace: true
sboms:
  - artifacts: archive
metadata:
  # Set the modified timestamp on the metadata files.
  #
  # Templates: allowed.
  mod_timestamp: "{{ .CommitTimestamp }}"



# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
